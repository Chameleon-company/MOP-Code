Instructions - how to incorperate your Flask project into the collective app.


1. In the templates folder, create a .html file named (topic)_(description).
Example - Vehicle classifcation project that uses AI detection = vehicle_detect.html


2. We are using the base method to keep the pages similar style-wise.
Copy the following text and paste into the newly created html file:

---------------------
{% extends "base.html" %}

{% block title %} (INSERT PROJECT TITLE HERE) {% endblock %}

{% block content %}
    <h2 class="section_heading"> (INSERT PROJECT TITLE HERE) </h2>
     <!-- INSERT YOUR FLASK APP HTML BODY CODE HERE-->
{% endblock %}
---------------------


3. Replace (INSERT PROJECT TITLE HERE) with the name of your project in both locations.
These instructions are assuming you have built a flask project with html code. If so, copy everything in between the <body> </body>,
not including the body brackets, and post it where the comment says to.
If you have not built a project yet, build the body section in that section.

If you need a script imported at the head of your html file, add it to the head of the base.html file.

The styles will be imported from our css file, so if you want to change how yours looks, either define <style> in your html or 
use a new class and update the css.file in the static folder to include your classes/designs.


4. Importing your.py
Rename your.py file appropriately (e.g. health_safety.py) and add it to the same folder as app.py.
In app.py, import your.py at the top with the other imports.


5. Updating requirments.
If you are importing any in your py file (such as: import pandas as pd), open up the requirments.txt file in the main folder and 
check to see if it is on the list. If it isn't, look up the documentation of the library you wish to use and add the version you are
using (or the latest version if it is backwards compatible) to this file on a new line.
Formatt example = pandas==2.2.3
Once your imports are all in the requirments file, in your terminal  run:
---------------------
pip install -r requirements.txt
---------------------
This installs all dependancies so that others can run your work and you can run others work.


6. Setting up the routes.
Navigate to the app.py file in th main folder. Copy the following code and paste into the appropriate labelled area for your project.
Replace all  'project_name' with the name you called your html file:

---------------------
#Project Name
@app.route('/project_name')
def project_name():
    return render_template('project_name.html')
---------------------

if your.py handles the rendering of your html template:
---------------------
#Project Name
@app.route('/project_name')
def project_name():
    return your.py.index()
---------------------


If you are wanting to call specific methods from your.py: 
---------------------
#Project Name
@app.route('/project_name')
def project_name():
    return your.py.method()
---------------------

Note: If you are using POST / GET methods in your routing, this can get a little messy and will change on a case by case basis.
We have implemented both in the health_safety page shown in the health section in the main app.py file. 
Here is a copy of that implementation:
---------------------
#Health Safety
@app.route('/health_safety', methods=['GET', 'POST'])
def health_safety_app():
    return health_safety.index()

@app.route('/health_safety/predict', methods=['POST'])
def health_data_view():
    category = request.form.get('category')
    gender = request.form.get('gender')
    age_range = request.form.get('age_range')
    suburb = request.form.get('suburb')

    # Pass the data to the health_safety.predict function to handle the logic and get the response
    health_data = health_safety.predict(category, gender, age_range, suburb)

    # Return the prediction data as JSON
    return jsonify(health_data)
---------------------
If need be, use this as your starting point and adjust your variables/routes/methods/functions accordingly.


7. Setting up links on project page.
Navigate to the main hmtl page of your topic area. 
Example - vehicle detection would navigate to vehicle_main.html.
Copy the following code and paste it below the other project links within the <p></p>.
Replace project_name with your route/project name (the name used in step 5)

---------------------
 <li><a href="/project_name"> (INSERT PROJECT TITLE HERE) </a></li>
---------------------


8. Save all. Refresh the app.py if it is running. Congratulations. Your project is now part of the collective app!
