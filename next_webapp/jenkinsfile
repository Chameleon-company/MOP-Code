pipeline {
    agent any

    environment {
        NODE_ENV = 'development'
        NODE_VERSION = '16' // Adjust Node.js version as needed
        MONGO_URL = 'your_mongo_connection_string'
        GCP_PROJECT = 'your_gcp_project_id'
        GCP_SERVICE_ACCOUNT_KEY = credentials('gcp-service-account-key')
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/Chameleon-company/MOP-Code.git'
            }
        }

        stage('Setup') {
            steps {
                dir('next_webapp') {
                    script {
                        sh 'node -v'
                        sh 'npm -v'
                    }
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('next_webapp') {
                    sh 'npm install'
                }
            }
        }

        stage('Code Quality') {
            steps {
                dir('next_webapp') {
                    sh 'npm run lint'
                }
            }
        }

        stage('Testing with Cypress') {
            steps {
                dir('next_webapp') {
                    sh 'npx cypress run'
                }
            }
        }

        stage('Build') {
            steps {
                dir('next_webapp') {
                    sh 'npm run build'
                }
            }
        }

        stage('Docker Build & Push') {
            steps {
                dir('next_webapp') {
                    script {
                        sh 'docker build -t gcr.io/$GCP_PROJECT/next-webapp:$BUILD_NUMBER .'
                        sh 'gcloud auth activate-service-account --key-file=$GCP_SERVICE_ACCOUNT_KEY'
                        sh 'gcloud auth configure-docker'
                        sh 'docker push gcr.io/$GCP_PROJECT/next-webapp:$BUILD_NUMBER'
                    }
                }
            }
        }

        stage('Deploy to GCP') {
            steps {
                script {
                    sh 'gcloud run deploy next-webapp --image gcr.io/$GCP_PROJECT/next-webapp:$BUILD_NUMBER --platform managed --region us-central1'
                }
            }
        }

        stage('Monitoring and Logging Setup') {
            steps {
                script {
                    echo "Setting up monitoring and logging..."
                }
            }
        }

        stage('Security and Compliance') {
            steps {
                dir('next_webapp') {
                    sh 'npm audit'
                }
            }
        }
    }

    post {
        always {
            script {
                archiveArtifacts artifacts: 'cypress/screenshots/**', allowEmptyArchive: true
                junit 'cypress/results/*.xml'
            }
        }

        success {
            echo 'Pipeline completed successfully!'
        }

        failure {
            echo 'Pipeline failed!'
        }
    }
}
