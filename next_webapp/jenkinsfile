pipeline {
    agent any

    environment {
        NODE_ENV = 'development'
        VERCEL_TOKEN = credentials('vercel-token') // Adding the Vercel token in Jenkins credentials
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from your repository
                git 'https://github.com/Chameleon-company/MOP-Code.git'
            }
        }
        
        stage('Setup') {
            steps {
                // Navigate to the next_webapp directory
                dir('next_webapp') {
                    script {
                        // Print Node.js and npm versions
                        sh 'node -v'
                        sh 'npm -v'
                    }
                }
            }
        }
        
        stage('Install Dependencies') {
            steps {
                // Navigate to the next_webapp directory and install dependencies
                dir('next_webapp') {
                    sh 'npm install'
                }
            }
        }
        
        stage('Build') {
            steps {
                // Navigate to the next_webapp directory and build the project
                dir('next_webapp') {
                    sh 'npm run build'
                }
            }
        }

        stage('Code Quality Check') {
            steps {
                // Navigate to the next_webapp directory and lint the project
                dir('next_webapp') {
                    sh 'npm run lint'
                }
            }
        }

        //Adrian
        stage('Install Vercel CLI') {
            steps {
                // Install Vercel CLI globally
                sh 'npm install -g vercel'
            }
        }
        
        //Adrian
        stage('Deploy to Vercel') {
            steps {
                dir('next_webapp') {
                    script {
                        // Deploy to Vercel using the Vercel CLI
                        sh 'npx vercel --prod --token=$VERCEL_TOKEN'
                    }
                }
            }
        }

        //Adrian
        stage('Testing with Cypress') {
            steps {
                dir('next_webapp') {
                    // Run Cypress tests
                    sh 'npx cypress run'
                }
            }
        }

        //Adrian
        stage('Monitoring and Logging Setup') {
            steps {
                script {
                    // Set up monitoring and logging
                    echo "Setting up monitoring and logging..."
                    // Example: Set up Prometheus, Grafana, or use GCP's Cloud Monitoring
                }
            }
        }

        //Adrian
        stage('Security and Compliance') {
            steps {
                dir('next_webapp') {
                    // Run security checks
                    sh 'npm audit'
                }
            }
        }

        
    }
    
    post {
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
